IN:    import warnings
         warnings.filterwarnings(‘ignore’)
         import pandas as pd
         import numpy as nd
         import matplotlib.pyplot as  plt
         import seaborn as sns

IN:   df=pd.read_csv(‘Mall_Customers.csv')
        df.head()    

IN:   df.info()

IN:   plt.style.use(“fivethirtyeight”)
        plt.figure(1,(15,8))
        n=0
        for x in [‘Age’, ‘Annual Income (k$)’, ‘Spending Score(1-100)’] :
        n+=1
        plt.subplot(1,3,n)
        plt.subplots_adjust (hspace=0.5, wspace=0.5)
        sns.distplot(df[x], bins=40)
        plt.show()

IN:   plt.figure(1,(15,5))
        sns.countplot(y=“Genre”, data=df)
        plt.show()

IN:    plt.style.use(“fivethirtyeight”)
        plt.figure(1,(15,7))
        n=0
        for x in [‘Age’, ‘Annual Income (k$)’, ‘Spending Score (1-100)’] :
              for y in [‘Age’, ‘Annual Income (k$)’, ‘Spending Score (1-100)’] :
                    n+=1
                    plt.subplot(3,3,n)
                    plt.subplots_adjust(hspace=0.5, wspace=0.5)
                    sns.regplot(x=x, y=y, data=df)
                    plt.show()

IN:     df.isnull().sum()

IN:     df.keys()

IN:     df.drop_duplicates(inplace=True)

IN:     df.keys()

IN:      plt.scatter(df [‘Annual Income (k$)’], df [‘Spending Score (1=100)’]

IN:      X=df.iloc[:,[3,4]].values

IN:     from sklearn.cluster import KMeans

IN:      kmeans=kMeans(n_clusters = 5, init=‘k-means++’, random_state = 42)
           y_kmeans=kmeans.fir_predict(X)

IN:     sns.scatterplot(X[y_kmeans == 0,0], X[y_kmeans ==0,1] color = ‘white’, label=‘cluster 1’)
          sns.scatterplot(X[y_kmeans == 1,0], X[y_kmeans ==1,1] color = ‘blue’, label=‘cluster 2’)
          sns.scatterplot(X[y_kmeans == 2,0], X[y_kmeans ==2,1] color = ‘green’, label=‘cluster 3’)
          sns.scatterplot(X[y_kmeans == 3,0], X[y_kmeans ==3,1] color = ‘black’, label=‘cluster 4’)
          sns.scatterplot(X[y_kmeans == 4,0], X[y_kmeans ==4,1] color = ‘orange’, label=‘cluster 5’)
                        sns.scatterplot(kmeans.cluster_centers_[:,0],kmeans.cluster_center_[:,1],color=‘red’,label=‘Centroi    ds’ , s=300, marke
plt.title(‘Clusters of customers’)
plt.xlabel(‘Annual Income (k$)’)
plt.ylabel(‘Spending Score (1-100)’)
plt.legend()



IN:    cluster=[]
         for k in range(1,11):
              kmeans=kMeans(n_clusters=k).fit(X)
              cluster.append(kmean.inertial_)
         plt.figure(figsize=(12,8))
         plt.plot(range(1,11), cluster, ‘r—‘)
         plt.xlable(‘Inertia’)  
         plt.ylable(’n_Cluster’)
         plt.show()
